# Generated by Django 3.2.3 on 2021-05-26 11:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProfileFollowsProfileRel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=199, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TwitterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_name', models.CharField(blank=True, max_length=150, null=True)),
                ('user_id', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('is_available', models.BooleanField(blank=True, null=True)),
                ('manually_added', models.BooleanField(blank=True, null=True)),
                ('user_info', models.TextField(blank=True, null=True)),
                ('user_info_prev_scrape_attempt', models.DateTimeField(blank=True, null=True)),
                ('user_info_prev_scrape_success', models.DateTimeField(blank=True, null=True)),
                ('user_info_prev_status_code', models.IntegerField(blank=True, null=True)),
                ('user_timeline_since_id', models.CharField(blank=True, max_length=99, null=True)),
                ('user_timeline_latest_tweet_datetime', models.DateTimeField(blank=True, null=True)),
                ('user_timeline_prev_scrape_attempt', models.DateTimeField(blank=True, null=True)),
                ('user_timeline_prev_scrape_success', models.DateTimeField(blank=True, null=True)),
                ('user_timeline_prev_status_code', models.IntegerField(blank=True, null=True)),
                ('user_likes_since_id', models.CharField(blank=True, max_length=99, null=True)),
                ('user_likes_prev_scrape_attempt', models.DateTimeField(blank=True, null=True)),
                ('user_likes_prev_scrape_success', models.DateTimeField(blank=True, null=True)),
                ('follower_ids_fully_scraped', models.BooleanField(blank=True, null=True)),
                ('follower_ids_cursor', models.CharField(blank=True, max_length=90, null=True)),
                ('follower_ids_prev_scrape_attempt', models.DateTimeField(blank=True, null=True)),
                ('follower_ids_prev_scrape_success', models.DateTimeField(blank=True, null=True)),
                ('follower_ids_prev_status_code', models.IntegerField(blank=True, null=True)),
                ('friend_ids_fully_scraped', models.BooleanField(blank=True, null=True)),
                ('friend_ids_cursor', models.CharField(blank=True, max_length=90, null=True)),
                ('friend_ids_prev_scrape_attempt', models.DateTimeField(blank=True, null=True)),
                ('friend_ids_prev_scrape_success', models.DateTimeField(blank=True, null=True)),
                ('friend_ids_prev_status_code', models.IntegerField(blank=True, null=True)),
                ('follows', models.ManyToManyField(through='twitter.ProfileFollowsProfileRel', to='twitter.TwitterProfile')),
            ],
        ),
        migrations.CreateModel(
            name='TwitterProfileTagRel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='twitter.tag')),
                ('twitter_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='twitter.twitterprofile')),
            ],
            options={
                'unique_together': {('twitter_profile', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='twitterprofile',
            name='tags',
            field=models.ManyToManyField(related_name='profiles', through='twitter.TwitterProfileTagRel', to='twitter.Tag'),
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_api_id', models.CharField(max_length=150)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('scrape_source', models.CharField(blank=True, choices=[('user-timeline', 'user-timeline'), ('user-timeline-retweet', 'user-timeline-retweet'), ('user-timeline-quote', 'user-timeline-quote'), ('user-like', 'user-like')], max_length=90, null=True)),
                ('tweet_type', models.CharField(blank=True, choices=[('status', 'status'), ('reply', 'reply'), ('quote', 'quote')], max_length=90, null=True)),
                ('has_link', models.BooleanField(blank=True, null=True)),
                ('has_text', models.BooleanField(blank=True, null=True)),
                ('publish_datetime', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='twitter.twitterprofile')),
            ],
        ),
        migrations.CreateModel(
            name='RetweetRel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_quote', models.BooleanField()),
                ('retweet_api_id', models.CharField(blank=True, max_length=90, null=True)),
                ('retweet_datetime', models.DateTimeField(blank=True, null=True)),
                ('retweeted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='twitter.twitterprofile')),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='twitter.tweet')),
            ],
        ),
        migrations.CreateModel(
            name='ReplyRel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_datetime', models.DateTimeField()),
                ('reply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_rels', to='twitter.tweet')),
                ('reply_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reply_rels', to='twitter.tweet')),
            ],
        ),
        migrations.AddField(
            model_name='profilefollowsprofilerel',
            name='dest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed_by_rels', to='twitter.twitterprofile'),
        ),
        migrations.AddField(
            model_name='profilefollowsprofilerel',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_rels', to='twitter.twitterprofile'),
        ),
        migrations.CreateModel(
            name='LikeRel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_api_id', models.CharField(blank=True, max_length=90, null=True)),
                ('like_datetime', models.DateTimeField(blank=True, null=True)),
                ('liked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='twitter.twitterprofile')),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='twitter.tweet')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileMentionedInTweet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentioned_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentioned_by_tweets', to='twitter.twitterprofile')),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tweet_mentions', to='twitter.tweet')),
            ],
            options={
                'unique_together': {('mentioned_profile', 'tweet')},
            },
        ),
        migrations.CreateModel(
            name='ProfileMentionedInProfileDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentioned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_description_mention_rels', to='twitter.twitterprofile')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentioned_by_profile_rels', to='twitter.twitterprofile')),
            ],
            options={
                'unique_together': {('profile', 'mentioned_by')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='profilefollowsprofilerel',
            unique_together={('source', 'dest')},
        ),
    ]
